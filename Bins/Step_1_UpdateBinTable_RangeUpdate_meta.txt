Updated 5/30/2017 J. Connolly, 5/4/2017 J. Connolly, 4/20/2017 J. Connolly

############### User input variables
Input Sources: User driven, Bin database, output tables HUC 2 assignment tool

############### General Notes:
When collapsing bin assignments, all current assignment are considered and used to generated a single species assignment.
You will lose huc specific assignments. Typically this is only done for new huc 2 where we do not have an assignment.
Relies on the assumption that higher coded values should trump lower coded values.
    collapse_huc = True
    collapse_new_HUCS_only = True

If you opt to collapse across all HUCs for a species you will violate the assumption that higher values trump lower
values. As a result you will **need to updated the DB_code_Dict in Step_2_ReCode Bin Table** so that the values starting
with 13 are 'Yes' and not 'No'. These are huc specific assignment for land locked hucs, species can only be in these
bins in coastal HUC2s.

############### ASSUMPTIONS
1) Final columns headers are the same as those in current_bin_table
2) Columns are in the correct order ie, species info cols, bins, database info columns
3) HUC 15 should be considered land-locked because it is land-locked within US jurisdiction
4) Coded bins values are hierarchical, a higher number trumps a lower number when collapsing
    **NOTE if collapsing across all HUCs for a species the values found in the bin_code_update will need to changed to
    yes in Step_2_ReCode Bin Table


Step 1: load data from current bin tables, and tables used for update

Loads input tables, updated species entity ids as needed, standardized the columns headers to current_bin_table headers,
add Spe_HUC column to all tables to be used as unique ID of species/HUC2 combinations. Columns of the input table are
are consider the final cols to be use, and assumed to be in the correct order. DF is split using index postion of bin
columns. Used index position so we could change the columns without having to change the code.

Step 2: Add new HUCs based on species range update and make archived of intermediate tables

Adds empty rows for new species/HUC2 combinations, for species with a new HUC2 add updated flagged to note when there
are HUC2 specific assignments, typically species found in marine bins in both coastal and land locked HUCS

Step 3: Removed HUCs based on species range update and make archived of intermediate tables
Removed HUC2 assignments for HUCs outside the new species range, and generates an archive of this data.

Step 4: Collapse bins assignment across all hucs into a single assignment for a species, when this occurs, and what
If user wishes generate an inclusive species bin assignment that represents all HUCs this can be done just for the new
species/HUC2 combinations or for all species/HUC2 combinations.
    ** NOTE when sub-setting the individual bin assignments for a species/HUC2 in list format using index values
    ie list[list value index][int(start_index):int(end_index)] the end index must be one beyond the last value you want
    to include.  All values including the one at the start_index but excluded the on at te end_index are pulled into the
    subset.
    **NOTE if doing this for all combination we will be violating the assumption that high bin coded values trump lower
    one and the **DB_code_Dict in Step_2_ReCode Bin Table**

Step 5: Updated bins assignments in land locked hucs based on bin_code_update dictionary
Checks the marine bin assignments for species found in the land locked hucs, species can not be found in these bins
    **NOTE when species occur in marine bins in coastal hucs and other bins in land-locked hucs the code value in the
    marine bins for the land-locked huc starts with '13'

Step 6: Runs a final check to make sure all entity id have been updated based on entityid_updated dictionary
Final check to make sure all entity ids are updated, should have been captured in Step 1

Step 7: Exports data frame to csv
